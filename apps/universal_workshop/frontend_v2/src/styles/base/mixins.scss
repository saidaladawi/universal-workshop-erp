/**
 * SCSS Mixins - Universal Workshop Frontend V2
 * 
 * Reusable mixins for consistent styling patterns,
 * responsive design, and Arabic/RTL support.
 */

// Responsive Design Mixins
@mixin respond-to($breakpoint) {
  @if $breakpoint == mobile {
    @media (min-width: 320px) {
      @content;
    }
  } @else if $breakpoint == tablet {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $breakpoint == desktop {
    @media (min-width: 1024px) {
      @content;
    }
  } @else if $breakpoint == wide {
    @media (min-width: 1440px) {
      @content;
    }
  }
}

// RTL Support Mixins
@mixin rtl-support {
  [dir="rtl"] & {
    @content;
  }
}

@mixin ltr-support {
  [dir="ltr"] & {
    @content;
  }
}

@mixin directional-property($property, $ltr-value, $rtl-value) {
  #{$property}: $ltr-value;
  
  [dir="rtl"] & {
    #{$property}: $rtl-value;
  }
}

// Arabic Typography Mixin
@mixin arabic-typography {
  font-family: var(--font-family-arabic);
  text-align: right;
  direction: rtl;
  
  &.bilingual {
    .text-en {
      font-family: var(--font-family-latin);
      direction: ltr;
      text-align: left;
    }
    
    .text-ar {
      font-family: var(--font-family-arabic);
      direction: rtl;
      text-align: right;
    }
  }
}

// Button Mixins
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: var(--radius-base);
  font-weight: var(--font-weight-medium);
  line-height: 1;
  text-decoration: none;
  cursor: pointer;
  transition: var(--transition-colors);
  
  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
  
  &:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

@mixin button-size($size: md) {
  @if $size == sm {
    padding: var(--spacing-2) var(--spacing-3);
    font-size: var(--font-size-sm);
    height: 32px;
  } @else if $size == md {
    padding: var(--spacing-3) var(--spacing-4);
    font-size: var(--font-size-base);
    height: 40px;
  } @else if $size == lg {
    padding: var(--spacing-4) var(--spacing-6);
    font-size: var(--font-size-lg);
    height: 48px;
  }
}

@mixin button-variant($color: primary) {
  @if $color == primary {
    background-color: var(--color-primary);
    color: var(--color-on-primary);
    
    &:hover {
      background-color: var(--color-primary-dark);
    }
  } @else if $color == secondary {
    background-color: var(--color-secondary);
    color: var(--color-on-secondary);
    
    &:hover {
      background-color: var(--color-secondary-dark);
    }
  } @else if $color == outline {
    background-color: transparent;
    color: var(--color-primary);
    border: 1px solid var(--color-primary);
    
    &:hover {
      background-color: var(--color-primary);
      color: var(--color-on-primary);
    }
  }
}

// Card Mixins
@mixin card-base {
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  overflow: hidden;
}

@mixin card-padding($size: md) {
  @if $size == sm {
    padding: var(--spacing-4);
  } @else if $size == md {
    padding: var(--spacing-6);
  } @else if $size == lg {
    padding: var(--spacing-8);
  }
}

// Form Mixins
@mixin form-field-base {
  width: 100%;
  border: 1px solid var(--color-border);
  border-radius: var(--radius-base);
  padding: var(--spacing-3) var(--spacing-4);
  font-size: var(--font-size-base);
  line-height: var(--line-height-normal);
  background-color: var(--color-surface);
  color: var(--color-text-primary);
  transition: var(--transition-colors);
  
  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);
  }
  
  &:disabled {
    background-color: var(--color-surface-variant);
    color: var(--color-text-disabled);
    cursor: not-allowed;
  }
  
  &::placeholder {
    color: var(--color-text-secondary);
  }
}

@mixin form-field-error {
  border-color: var(--color-error);
  
  &:focus {
    border-color: var(--color-error);
    box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.1);
  }
}

// Layout Mixins
@mixin container {
  width: 100%;
  max-width: var(--content-max-width);
  margin: 0 auto;
  padding: 0 var(--content-padding);
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Visual Effects Mixins
@mixin glass-effect {
  background: rgba(255, 255, 255, 0.25);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.18);
}

@mixin loading-skeleton {
  background: linear-gradient(90deg, 
    var(--color-surface-variant) 25%, 
    rgba(255, 255, 255, 0.5) 50%, 
    var(--color-surface-variant) 75%
  );
  background-size: 200% 100%;
  animation: loading 1.5s infinite;
}

@keyframes loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// Utility Mixins
@mixin visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Mobile Optimization Mixins
@mixin touch-friendly {
  min-height: 44px;
  min-width: 44px;
  
  @include respond-to(mobile) {
    min-height: 48px;
    min-width: 48px;
  }
}

@mixin mobile-optimized {
  @include respond-to(mobile) {
    padding: var(--spacing-4);
    font-size: var(--font-size-lg);
  }
}