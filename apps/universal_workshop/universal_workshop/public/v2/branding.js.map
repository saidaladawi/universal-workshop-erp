{"version":3,"file":"branding.js","sources":["../../../frontend_v2/src/branding/theme-manager.ts","../../../frontend_v2/src/branding/logo-manager.ts","../../../frontend_v2/src/branding.ts"],"sourcesContent":["/**\n * Theme Manager - Universal Workshop Frontend V2\n * Placeholder for theme management functionality\n */\n\nimport type { ColorPalette, TypographyConfig } from '@/types/workshop'\n\nexport class ThemeManager {\n  async initialize(): Promise<void> {\n    console.log('üé® Theme manager initialized (placeholder)')\n  }\n\n  applyColorScheme(colors: ColorPalette): void {\n    console.log('Applying color scheme:', colors)\n  }\n\n  applyTypography(typography: TypographyConfig): void {\n    console.log('Applying typography:', typography)\n  }\n}\n\nexport default ThemeManager","/**\n * Logo Manager - Universal Workshop Frontend V2\n * Placeholder for logo management functionality\n */\n\nimport type { LogoSet } from '@/types/workshop'\n\nexport class LogoManager {\n  async initialize(): Promise<void> {\n    console.log('üñºÔ∏è Logo manager initialized (placeholder)')\n  }\n\n  applyLogos(logos: LogoSet): void {\n    console.log('Applying logos:', logos)\n  }\n}\n\nexport default LogoManager","/**\n * Branding Entry Point - Universal Workshop Frontend V2\n * \n * Dedicated entry point for the dynamic branding system.\n * Can be loaded independently for branding-only functionality.\n */\n\nimport { BrandingSystem } from '@/branding/branding-system'\nimport { ThemeManager } from '@/branding/theme-manager'\nimport { LogoManager } from '@/branding/logo-manager'\n\n// Branding-specific styles\nimport '@/styles/branding/dynamic-branding.scss'\nimport '@/styles/branding/theme-system.scss'\n\n/**\n * Standalone branding application\n */\nclass BrandingApp {\n  private brandingSystem: BrandingSystem | null = null\n  private themeManager: ThemeManager | null = null\n  private logoManager: LogoManager | null = null\n\n  /**\n   * Initialize branding system independently\n   */\n  async initialize(workshopId?: string): Promise<void> {\n    try {\n      // Initialize core branding system\n      this.brandingSystem = new BrandingSystem(workshopId)\n      await this.brandingSystem.initialize()\n\n      // Initialize theme management\n      this.themeManager = new ThemeManager()\n      await this.themeManager.initialize()\n\n      // Initialize logo management\n      this.logoManager = new LogoManager()\n      await this.logoManager.initialize()\n\n      // Apply current branding\n      await this.applyCurrentBranding()\n\n      console.log('üé® Branding system initialized successfully')\n    } catch (error) {\n      console.error('‚ùå Failed to initialize branding system:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Apply current branding configuration\n   */\n  private async applyCurrentBranding(): Promise<void> {\n    if (!this.brandingSystem) return\n\n    const config = await this.brandingSystem.getCurrentConfig()\n    \n    if (config) {\n      // Apply colors\n      if (config.colors) {\n        this.themeManager?.applyColorScheme(config.colors)\n      }\n\n      // Apply typography\n      if (config.typography) {\n        this.themeManager?.applyTypography(config.typography)\n      }\n\n      // Apply logos\n      if (config.logos) {\n        this.logoManager?.applyLogos(config.logos)\n      }\n    }\n  }\n\n  /**\n   * Get current branding configuration\n   */\n  getBrandingConfig() {\n    return this.brandingSystem?.getCurrentConfig()\n  }\n\n  /**\n   * Update branding configuration\n   */\n  async updateBranding(config: any): Promise<void> {\n    if (!this.brandingSystem) {\n      throw new Error('Branding system not initialized')\n    }\n\n    await this.brandingSystem.updateConfig(config)\n    await this.applyCurrentBranding()\n  }\n}\n\n// Global branding app instance\nconst brandingApp = new BrandingApp()\n\n// Auto-initialize if branding data is available\nif (window.frappe?.boot) {\n  brandingApp.initialize()\n}\n\n// Export for external use\nexport { brandingApp as default, BrandingApp }\n\n// Global browser access\nif (typeof window !== 'undefined') {\n  (window as any).BrandingApp = brandingApp\n}"],"names":["ThemeManager","colors","typography","LogoManager","logos","BrandingApp","__publicField","workshopId","BrandingSystem","error","config","brandingApp"],"mappings":"6NAOO,MAAMA,CAAa,CACxB,MAAM,YAA4B,CAChC,QAAQ,IAAI,4CAA4C,CAAA,CAG1D,iBAAiBC,EAA4B,CAC3C,QAAQ,IAAI,yBAA0BA,CAAM,CAAA,CAG9C,gBAAgBC,EAAoC,CAClD,QAAQ,IAAI,uBAAwBA,CAAU,CAAA,CAElD,CCZO,MAAMC,CAAY,CACvB,MAAM,YAA4B,CAChC,QAAQ,IAAI,4CAA4C,CAAA,CAG1D,WAAWC,EAAsB,CAC/B,QAAQ,IAAI,kBAAmBA,CAAK,CAAA,CAExC,CCGA,MAAMC,CAAY,CAAlB,cACUC,EAAA,sBAAwC,MACxCA,EAAA,oBAAoC,MACpCA,EAAA,mBAAkC,MAK1C,MAAM,WAAWC,EAAoC,CACnD,GAAI,CAEF,KAAK,eAAiB,IAAIC,EAAeD,CAAU,EACnD,MAAM,KAAK,eAAe,WAAA,EAG1B,KAAK,aAAe,IAAIP,EACxB,MAAM,KAAK,aAAa,WAAA,EAGxB,KAAK,YAAc,IAAIG,EACvB,MAAM,KAAK,YAAY,WAAA,EAGvB,MAAM,KAAK,qBAAA,EAEX,QAAQ,IAAI,6CAA6C,CAAA,OAClDM,EAAO,CACd,cAAQ,MAAM,0CAA2CA,CAAK,EACxDA,CAAA,CACR,CAMF,MAAc,sBAAsC,CAClD,GAAI,CAAC,KAAK,eAAgB,OAE1B,MAAMC,EAAS,MAAM,KAAK,eAAe,iBAAA,EAErCA,IAEEA,EAAO,QACT,KAAK,cAAc,iBAAiBA,EAAO,MAAM,EAI/CA,EAAO,YACT,KAAK,cAAc,gBAAgBA,EAAO,UAAU,EAIlDA,EAAO,OACT,KAAK,aAAa,WAAWA,EAAO,KAAK,EAE7C,CAMF,mBAAoB,CAClB,OAAO,KAAK,gBAAgB,iBAAA,CAAiB,CAM/C,MAAM,eAAeA,EAA4B,CAC/C,GAAI,CAAC,KAAK,eACR,MAAM,IAAI,MAAM,iCAAiC,EAGnD,MAAM,KAAK,eAAe,aAAaA,CAAM,EAC7C,MAAM,KAAK,qBAAA,CAAqB,CAEpC,CAGA,MAAMC,EAAc,IAAIN,EAGpB,OAAO,QAAQ,MACjBM,EAAY,WAAA,EAOV,OAAO,OAAW,MACnB,OAAe,YAAcA"}