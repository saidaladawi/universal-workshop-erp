{"version":3,"file":"analytics.js","sources":["../../../frontend_v2/src/modules/analytics/analytics-engine.ts","../../../frontend_v2/src/modules/analytics/realtime-manager.ts","../../../frontend_v2/src/modules/analytics/kpi-calculator.ts","../../../frontend_v2/src/analytics.ts"],"sourcesContent":["/**\n * Analytics Engine - Universal Workshop Frontend V2\n * \n * Core analytics engine for business intelligence and data processing\n */\n\nexport class AnalyticsEngine {\n  private metrics: Map<string, any> = new Map()\n  private initialized = false\n\n  async initialize(): Promise<void> {\n    this.initialized = true\n    console.log('📊 Analytics Engine initialized')\n  }\n\n  updateMetrics(data: any): void {\n    if (!this.initialized) return\n    // Update metrics logic\n  }\n\n  getCurrentMetrics(): any {\n    return Object.fromEntries(this.metrics)\n  }\n\n  async generateReport(dateRange: { from: Date; to: Date }, filters?: any): Promise<any> {\n    // Report generation logic\n    return {\n      dateRange,\n      filters,\n      data: {},\n      generatedAt: new Date()\n    }\n  }\n}","/**\n * Real-time Manager - Universal Workshop Frontend V2\n * Placeholder for real-time data management\n */\n\nexport class RealTimeManager {\n  private static instance: RealTimeManager | null = null\n  private subscriptions: Map<string, Function[]> = new Map()\n\n  static getInstance(): RealTimeManager {\n    if (!RealTimeManager.instance) {\n      RealTimeManager.instance = new RealTimeManager()\n    }\n    return RealTimeManager.instance\n  }\n\n  async initialize(): Promise<void> {\n    console.log('🔄 Real-time manager initialized (placeholder)')\n  }\n\n  subscribe(event: string, callback: Function): void {\n    if (!this.subscriptions.has(event)) {\n      this.subscriptions.set(event, [])\n    }\n    this.subscriptions.get(event)?.push(callback)\n  }\n}\n\nexport default RealTimeManager","/**\n * KPI Calculator - Universal Workshop Frontend V2\n * Placeholder for KPI calculation functionality\n */\n\nexport class KPICalculator {\n  private kpis: Map<string, any> = new Map()\n\n  async initialize(): Promise<void> {\n    console.log('📈 KPI calculator initialized (placeholder)')\n  }\n\n  updateInventoryKPIs(data: any): void {\n    this.kpis.set('inventory', data)\n  }\n\n  updateFinancialKPIs(data: any): void {\n    this.kpis.set('financial', data)\n  }\n\n  getCurrentKPIs(): any {\n    return Object.fromEntries(this.kpis)\n  }\n}\n\nexport default KPICalculator","/**\n * Analytics Entry Point - Universal Workshop Frontend V2\n * \n * Dedicated entry point for analytics and performance monitoring.\n * Provides real-time KPIs, business intelligence, and performance tracking.\n */\n\nimport { AnalyticsEngine } from '@/modules/analytics/analytics-engine'\nimport { PerformanceMonitor } from '@/utils/performance/monitor'\nimport { RealTimeManager } from '@/modules/analytics/realtime-manager'\nimport { KPICalculator } from '@/modules/analytics/kpi-calculator'\n\n// Analytics-specific styles\nimport '@/styles/analytics/dashboard.scss'\nimport '@/styles/analytics/charts.scss'\n\n/**\n * Analytics application for business intelligence\n */\nclass AnalyticsApp {\n  private analyticsEngine: AnalyticsEngine | null = null\n  private performanceMonitor: PerformanceMonitor | null = null\n  private realTimeManager: RealTimeManager | null = null\n  private kpiCalculator: KPICalculator | null = null\n\n  /**\n   * Initialize analytics system\n   */\n  async initialize(): Promise<void> {\n    try {\n      // Initialize performance monitoring first\n      this.performanceMonitor = PerformanceMonitor.getInstance()\n      this.performanceMonitor.measurePageLoad()\n\n      // Initialize analytics engine\n      this.analyticsEngine = new AnalyticsEngine()\n      await this.analyticsEngine.initialize()\n\n      // Initialize real-time data management\n      this.realTimeManager = RealTimeManager.getInstance()\n      await this.realTimeManager.initialize()\n\n      // Initialize KPI calculation engine\n      this.kpiCalculator = new KPICalculator()\n      await this.kpiCalculator.initialize()\n\n      // Start real-time updates\n      this.startRealTimeUpdates()\n\n      console.log('📊 Analytics system initialized successfully')\n    } catch (error) {\n      console.error('❌ Failed to initialize analytics system:', error)\n      throw error\n    }\n  }\n\n  /**\n   * Start real-time data updates\n   */\n  private startRealTimeUpdates(): void {\n    if (!this.realTimeManager) return\n\n    // Subscribe to workshop metrics\n    this.realTimeManager.subscribe('workshop.metrics', (data) => {\n      this.handleMetricsUpdate(data)\n    })\n\n    // Subscribe to inventory updates\n    this.realTimeManager.subscribe('inventory.changes', (data) => {\n      this.handleInventoryUpdate(data)\n    })\n\n    // Subscribe to financial data\n    this.realTimeManager.subscribe('financial.updates', (data) => {\n      this.handleFinancialUpdate(data)\n    })\n  }\n\n  /**\n   * Handle metrics updates\n   */\n  private handleMetricsUpdate(data: any): void {\n    if (this.analyticsEngine) {\n      this.analyticsEngine.updateMetrics(data)\n    }\n  }\n\n  /**\n   * Handle inventory updates\n   */\n  private handleInventoryUpdate(data: any): void {\n    if (this.kpiCalculator) {\n      this.kpiCalculator.updateInventoryKPIs(data)\n    }\n  }\n\n  /**\n   * Handle financial updates\n   */\n  private handleFinancialUpdate(data: any): void {\n    if (this.kpiCalculator) {\n      this.kpiCalculator.updateFinancialKPIs(data)\n    }\n  }\n\n  /**\n   * Get current analytics data\n   */\n  getAnalyticsData() {\n    return {\n      metrics: this.analyticsEngine?.getCurrentMetrics(),\n      kpis: this.kpiCalculator?.getCurrentKPIs(),\n      performance: this.performanceMonitor?.generateReport()\n    }\n  }\n\n  /**\n   * Generate analytics report\n   */\n  async generateReport(dateRange: { from: Date; to: Date }, filters?: any) {\n    if (!this.analyticsEngine) {\n      throw new Error('Analytics engine not initialized')\n    }\n\n    return await this.analyticsEngine.generateReport(dateRange, filters)\n  }\n}\n\n// Global analytics app instance\nconst analyticsApp = new AnalyticsApp()\n\n// Export for external use\nexport { analyticsApp as default, AnalyticsApp }\n\n// Global browser access\nif (typeof window !== 'undefined') {\n  (window as any).AnalyticsApp = analyticsApp\n}"],"names":["AnalyticsEngine","__publicField","data","dateRange","filters","_RealTimeManager","event","callback","RealTimeManager","KPICalculator","AnalyticsApp","PerformanceMonitor","error","analyticsApp"],"mappings":"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"}