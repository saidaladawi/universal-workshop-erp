config:
  target: 'http://localhost:8000'
  phases:
    - duration: 60
      arrivalRate: 5
      name: "Warm-up phase"
    - duration: 300
      arrivalRate: 20
      name: "Load testing phase"
    - duration: 120
      arrivalRate: 50
      name: "Stress testing phase"
  defaults:
    headers:
      Content-Type: 'application/json'
      Accept: 'application/json'
  payload:
    path: './test_data.csv'
    fields:
      - customer_name
      - mobile_no
      - email
      - vehicle_make
      - vehicle_model
      - service_type

scenarios:
  - name: "Customer Registration and Booking Flow"
    weight: 60
    flow:
      - post:
          url: "/api/method/login"
          json:
            usr: "{{ $randomString() }}@example.com"
            pwd: "password123"
          capture:
            - json: "$.message"
              as: "session_id"
      
      - think: 2
      
      - post:
          url: "/api/resource/Customer"
          json:
            customer_name: "{{ customer_name }}"
            customer_name_arabic: "عميل تجريبي"
            mobile_no: "{{ mobile_no }}"
            email: "{{ email }}"
            language: "{{ $randomItem(['en', 'ar']) }}"
            customer_type: "Individual"
            territory: "Oman"
          capture:
            - json: "$.data.name"
              as: "customer_id"
      
      - think: 3
      
      - post:
          url: "/api/resource/Vehicle"
          json:
            customer: "{{ customer_id }}"
            make: "{{ vehicle_make }}"
            model: "{{ vehicle_model }}"
            year: "{{ $randomInt(2015, 2024) }}"
            license_plate: "OM-{{ $randomInt(1000, 9999) }}"
            vin: "VIN{{ $randomString() }}"
            color: "{{ $randomItem(['White', 'Black', 'Silver', 'Blue', 'Red']) }}"
            mileage: "{{ $randomInt(10000, 200000) }}"
          capture:
            - json: "$.data.name"
              as: "vehicle_id"
      
      - think: 5
      
      - post:
          url: "/api/resource/Appointment"
          json:
            customer: "{{ customer_id }}"
            vehicle: "{{ vehicle_id }}"
            appointment_date: "{{ $randomItem(['2024-01-15', '2024-01-16', '2024-01-17', '2024-01-18']) }}"
            appointment_time: "{{ $randomItem(['09:00:00', '10:00:00', '11:00:00', '14:00:00', '15:00:00']) }}"
            service_type: "{{ service_type }}"
            priority: "{{ $randomItem(['Low', 'Medium', 'High']) }}"
            description: "Customer needs {{ service_type }}"
            status: "Scheduled"

  - name: "Technician Workflow"
    weight: 25
    flow:
      - post:
          url: "/api/method/login"
          json:
            usr: "technician@workshop.com"
            pwd: "password123"
      
      - think: 2
      
      - get:
          url: "/api/resource/Service Order"
          qs:
            filters: '[["status","=","In Progress"]]'
            limit: 10
      
      - think: 3
      
      - get:
          url: "/api/resource/Service Order/{{ $randomString() }}"
      
      - think: 5
      
      - put:
          url: "/api/resource/Service Order/{{ $randomString() }}"
          json:
            status: "{{ $randomItem(['In Progress', 'Completed', 'On Hold']) }}"
            technician_notes: "Status updated via load test at {{ $timestamp }}"
      
      - think: 2
      
      - post:
          url: "/api/resource/Stock Entry"
          json:
            purpose: "Material Issue"
            items:
              - item_code: "PART-{{ $randomInt(1000, 9999) }}"
                qty: "{{ $randomInt(1, 5) }}"
                rate: "{{ $randomFloat(10, 500) }}"

  - name: "Administrative Operations"
    weight: 15
    flow:
      - post:
          url: "/api/method/login"
          json:
            usr: "admin@workshop.com"
            pwd: "admin123"
      
      - think: 3
      
      - post:
          url: "/api/method/workshop.reports.customer_report"
          json:
            from_date: "2024-01-01"
            to_date: "2024-01-31"
            format: "json"
      
      - think: 5
      
      - post:
          url: "/api/method/workshop.reports.revenue_report"
          json:
            from_date: "2024-01-01"
            to_date: "2024-01-31"
            group_by: "month"
      
      - think: 2
      
      - get:
          url: "/api/resource/Item"
          qs:
            filters: '[["is_stock_item","=",1]]'
            fields: '["name","item_name","stock_balance"]'
            limit: 50
      
      - think: 4
      
      - post:
          url: "/api/resource/Purchase Order"
          json:
            supplier: "Default Supplier"
            items:
              - item_code: "ITEM-{{ $randomInt(1000, 9999) }}"
                qty: "{{ $randomInt(10, 100) }}"
                rate: "{{ $randomFloat(50, 1000) }}"
            taxes_and_charges: "VAT 5% - OM"
      
      - think: 3
      
      - post:
          url: "/api/resource/Sales Invoice"
          json:
            customer: "CUST-{{ $randomInt(1000, 9999) }}"
            items:
              - item_code: "SERVICE-{{ $randomInt(100, 999) }}"
                qty: 1
                rate: "{{ $randomFloat(100, 1000) }}"
            taxes_and_charges: "VAT 5% - OM"

before:
  flow:
    - log: "Starting Universal Workshop ERP Load Test"
    - log: "Target: {{ $target }}"

after:
  flow:
    - log: "Load test completed"
