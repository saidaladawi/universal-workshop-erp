var p=Object.defineProperty;var l=(c,e,r)=>e in c?p(c,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):c[e]=r;var o=(c,e,r)=>l(c,typeof e!="symbol"?e+"":e,r);const s=class s{constructor(){o(this,"metrics",[]);o(this,"observers",new Set);o(this,"isMonitoring",!1);o(this,"startTime",performance.now());this.setupPerformanceObservers()}static getInstance(){return s.instance||(s.instance=new s),s.instance}startMonitoring(){this.isMonitoring||(this.isMonitoring=!0,this.startTime=performance.now(),this.setupResourceTiming(),this.setupUserTiming(),this.setupNavigationTiming(),console.log("📊 Performance monitoring started"))}stopMonitoring(){this.isMonitoring=!1,this.observers.forEach(e=>e.disconnect()),this.observers.clear(),console.log("⏹️ Performance monitoring stopped")}measurePageLoad(){document.readyState==="complete"?this.collectLoadMetrics():window.addEventListener("load",()=>{this.collectLoadMetrics()})}collectLoadMetrics(){const e=performance.getEntriesByType("navigation")[0];e&&(this.addMetric({name:"dns_lookup_time",value:e.domainLookupEnd-e.domainLookupStart,timestamp:Date.now(),category:"loading",metadata:{type:"dns"}}),this.addMetric({name:"connection_time",value:e.connectEnd-e.connectStart,timestamp:Date.now(),category:"loading",metadata:{type:"connection"}}),this.addMetric({name:"time_to_first_byte",value:e.responseStart-e.requestStart,timestamp:Date.now(),category:"loading",metadata:{type:"ttfb"}}),this.addMetric({name:"dom_content_loaded",value:e.domContentLoadedEventEnd-e.navigationStart,timestamp:Date.now(),category:"loading",metadata:{type:"dom"}}),this.addMetric({name:"total_load_time",value:e.loadEventEnd-e.navigationStart,timestamp:Date.now(),category:"loading",metadata:{type:"total"}})),this.measureCoreWebVitals()}measureCoreWebVitals(){if("PerformanceObserver"in window){const e=new PerformanceObserver(t=>{const n=t.getEntries(),a=n[n.length-1];this.addMetric({name:"largest_contentful_paint",value:a.startTime,timestamp:Date.now(),category:"user",metadata:{type:"lcp",element:a.element?.tagName}})});try{e.observe({entryTypes:["largest-contentful-paint"]}),this.observers.add(e)}catch{console.warn("LCP observation not supported")}const r=new PerformanceObserver(t=>{t.getEntries().forEach(a=>{this.addMetric({name:"first_input_delay",value:a.processingStart-a.startTime,timestamp:Date.now(),category:"user",metadata:{type:"fid",eventType:a.name}})})});try{r.observe({entryTypes:["first-input"]}),this.observers.add(r)}catch{console.warn("FID observation not supported")}const i=new PerformanceObserver(t=>{let n=0;const a=t.getEntries();a.forEach(m=>{m.hadRecentInput||(n+=m.value)}),this.addMetric({name:"cumulative_layout_shift",value:n,timestamp:Date.now(),category:"user",metadata:{type:"cls",entryCount:a.length}})});try{i.observe({entryTypes:["layout-shift"]}),this.observers.add(i)}catch{console.warn("CLS observation not supported")}}}measureComponentRender(e,r){this.addMetric({name:"component_render_time",value:r,timestamp:Date.now(),category:"runtime",metadata:{component:e,type:"render"}})}measureApiCall(e,r,i){this.addMetric({name:"api_call_duration",value:r,timestamp:Date.now(),category:"runtime",metadata:{endpoint:e,success:i,type:"api"}})}measureMemoryUsage(){if("memory"in performance){const e=performance.memory;this.addMetric({name:"memory_used_js_heap",value:e.usedJSHeapSize,timestamp:Date.now(),category:"runtime",metadata:{totalJSHeapSize:e.totalJSHeapSize,jsHeapSizeLimit:e.jsHeapSizeLimit,type:"memory"}})}}setupPerformanceObservers(){"PerformanceObserver"in window&&(this.setupResourceTiming(),this.setupUserTiming(),this.setupNavigationTiming())}setupResourceTiming(){if(!("PerformanceObserver"in window))return;const e=new PerformanceObserver(r=>{r.getEntries().forEach(t=>{this.addMetric({name:"resource_load_time",value:t.responseEnd-t.startTime,timestamp:Date.now(),category:"resource",metadata:{name:t.name,type:t.initiatorType,size:t.transferSize,cached:t.transferSize===0}})})});try{e.observe({entryTypes:["resource"]}),this.observers.add(e)}catch{console.warn("Resource timing observation not supported")}}setupUserTiming(){if(!("PerformanceObserver"in window))return;const e=new PerformanceObserver(r=>{r.getEntries().forEach(t=>{this.addMetric({name:"user_timing",value:t.duration||0,timestamp:Date.now(),category:"user",metadata:{name:t.name,type:t.entryType,startTime:t.startTime}})})});try{e.observe({entryTypes:["mark","measure"]}),this.observers.add(e)}catch{console.warn("User timing observation not supported")}}setupNavigationTiming(){if(!("PerformanceObserver"in window))return;const e=new PerformanceObserver(r=>{r.getEntries().forEach(t=>{this.addMetric({name:"navigation_timing",value:t.loadEventEnd-t.navigationStart,timestamp:Date.now(),category:"loading",metadata:{type:t.type,redirectCount:t.redirectCount,transferSize:t.transferSize}})})});try{e.observe({entryTypes:["navigation"]}),this.observers.add(e)}catch{console.warn("Navigation timing observation not supported")}}addMetric(e){this.metrics.push(e),this.metrics.length>1e3&&(this.metrics=this.metrics.slice(-1e3)),this.reportMetric(e)}reportMetric(e){if(["largest_contentful_paint","first_input_delay","cumulative_layout_shift","total_load_time"].includes(e.name))try{typeof window<"u"&&window.frappe?.call&&window.frappe.call({method:"universal_workshop.analytics.record_performance_metric",args:{metric:e}}).catch(()=>{})}catch{}}getCurrentMetrics(){return[...this.metrics]}getMetricsByCategory(e){return this.metrics.filter(r=>r.category===e)}getAverageMetric(e){const r=this.metrics.filter(t=>t.name===e);return r.length===0?0:r.reduce((t,n)=>t+n.value,0)/r.length}generateReport(){this.getMetricsByCategory("loading"),this.getMetricsByCategory("runtime");const e=this.getAverageMetric("total_load_time"),r=this.getAverageMetric("component_render_time");let i=0;"memory"in performance&&(i=performance.memory.usedJSHeapSize);const t=this.generateRecommendations();return{totalMetrics:this.metrics.length,averageLoadTime:e,averageRenderTime:r,memoryUsage:i,recommendations:t,metrics:this.getCurrentMetrics(),generatedAt:new Date}}generateRecommendations(){const e=[];if(this.getAverageMetric("largest_contentful_paint")>2500&&e.push("Optimize Largest Contentful Paint (LCP) - consider image optimization and server response time improvements"),this.getAverageMetric("first_input_delay")>100&&e.push("Reduce First Input Delay (FID) - minimize main thread blocking and defer non-critical JavaScript"),this.getAverageMetric("cumulative_layout_shift")>.1&&e.push("Improve Cumulative Layout Shift (CLS) - specify image dimensions and avoid dynamic content insertion"),this.getAverageMetric("total_load_time")>3e3&&e.push("Optimize page load time - consider code splitting, lazy loading, and CDN usage"),"memory"in performance){const a=performance.memory;a.usedJSHeapSize/a.jsHeapSizeLimit*100>80&&e.push("High memory usage detected - review for memory leaks and optimize data structures")}return e}clearMetrics(){this.metrics=[]}exportMetrics(){return JSON.stringify({metrics:this.metrics,report:this.generateReport(),exportedAt:new Date().toISOString()},null,2)}};o(s,"instance",null);let d=s;export{d as P};
//# sourceMappingURL=monitor-QC5JCVak.js.map
