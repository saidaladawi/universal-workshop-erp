{"version":3,"file":"branding-system-8S7Zd6Pf.js","sources":["../../../../frontend_v2/src/branding/branding-system.ts"],"sourcesContent":["/**\n * Modern Branding System - Universal Workshop Frontend V2\n * \n * Advanced branding system with dynamic theming, multi-tenant support,\n * and real-time configuration updates.\n */\n\nimport type { BrandingConfig, WorkshopProfile, ColorPalette, TypographyConfig } from '@/types/workshop'\n\nexport class BrandingSystem {\n  private config: BrandingConfig | null = null\n  private workshopId: string | null = null\n  private observers: Set<BrandingObserver> = new Set()\n  private initialized = false\n\n  constructor(workshopId?: string) {\n    this.workshopId = workshopId || this.detectWorkshopId()\n  }\n\n  /**\n   * Initialize the branding system\n   */\n  async initialize(): Promise<void> {\n    try {\n      await this.loadConfiguration()\n      this.applyBranding()\n      this.setupDynamicUpdates()\n      this.initialized = true\n      \n      console.log('ðŸŽ¨ Branding system initialized for workshop:', this.workshopId)\n    } catch (error) {\n      console.error('Failed to initialize branding system:', error)\n      await this.loadDefaultBranding()\n    }\n  }\n\n  /**\n   * Load branding configuration from server\n   */\n  private async loadConfiguration(): Promise<void> {\n    if (!this.workshopId) {\n      throw new Error('Workshop ID not available')\n    }\n\n    try {\n      const response = await this.fetchBrandingConfig(this.workshopId)\n      this.config = response.data\n    } catch (error) {\n      console.warn('Failed to load branding config, using defaults:', error)\n      await this.loadDefaultBranding()\n    }\n  }\n\n  /**\n   * Fetch branding configuration from API\n   */\n  private async fetchBrandingConfig(workshopId: string): Promise<any> {\n    if (typeof window !== 'undefined' && window.frappe?.call) {\n      return await window.frappe.call({\n        method: 'universal_workshop.api.get_branding_config',\n        args: { workshop_id: workshopId }\n      })\n    }\n    \n    // Fallback for environments without Frappe\n    return { data: this.getDefaultBrandingConfig() }\n  }\n\n  /**\n   * Load default branding configuration\n   */\n  private async loadDefaultBranding(): Promise<void> {\n    this.config = this.getDefaultBrandingConfig()\n  }\n\n  /**\n   * Get default branding configuration\n   */\n  private getDefaultBrandingConfig(): BrandingConfig {\n    return {\n      colors: {\n        primary: '#1976d2',\n        secondary: '#dc004e',\n        accent: '#9c27b0',\n        success: '#4caf50',\n        warning: '#ff9800',\n        error: '#f44336',\n        info: '#2196f3',\n        background: '#fafafa',\n        surface: '#ffffff',\n        onPrimary: '#ffffff',\n        onSecondary: '#ffffff',\n        onBackground: '#212121',\n        onSurface: '#212121',\n        border: '#e0e0e0',\n        divider: '#bdbdbd',\n        shadow: 'rgba(0, 0, 0, 0.12)'\n      },\n      logos: {\n        main: '/assets/universal_workshop/images/logo.png',\n        light: '/assets/universal_workshop/images/logo-light.png',\n        dark: '/assets/universal_workshop/images/logo-dark.png',\n        favicon: '/assets/universal_workshop/images/favicon.ico',\n        mobile: '/assets/universal_workshop/images/logo-mobile.png',\n        print: '/assets/universal_workshop/images/logo-print.png'\n      },\n      typography: {\n        fontFamily: {\n          arabic: ['Cairo', 'Amiri', 'sans-serif'],\n          latin: ['Inter', 'Roboto', 'sans-serif']\n        },\n        fontSize: {\n          xs: '0.75rem',\n          sm: '0.875rem',\n          base: '1rem',\n          lg: '1.125rem',\n          xl: '1.25rem',\n          '2xl': '1.5rem',\n          '3xl': '1.875rem',\n          '4xl': '2.25rem'\n        },\n        fontWeight: {\n          light: 300,\n          normal: 400,\n          medium: 500,\n          semibold: 600,\n          bold: 700\n        },\n        lineHeight: {\n          tight: 1.25,\n          normal: 1.5,\n          relaxed: 1.75\n        }\n      },\n      layout: {\n        sidebar: {\n          width: '280px',\n          collapsible: true,\n          position: 'left'\n        },\n        header: {\n          height: '64px',\n          fixed: true,\n          transparent: false\n        },\n        content: {\n          maxWidth: '1200px',\n          padding: '24px',\n          centered: true\n        }\n      },\n      theme: {\n        mode: 'light',\n        highContrast: false,\n        animations: true,\n        reducedMotion: false,\n        compactMode: false\n      }\n    }\n  }\n\n  /**\n   * Apply branding to the page\n   */\n  private applyBranding(): void {\n    if (!this.config) return\n\n    this.applyCSSVariables()\n    this.applyLogos()\n    this.applyTypography()\n    this.notifyObservers()\n  }\n\n  /**\n   * Apply CSS custom properties for colors and spacing\n   */\n  private applyCSSVariables(): void {\n    if (!this.config) return\n\n    const root = document.documentElement\n    const { colors, layout, typography } = this.config\n\n    // Apply color variables\n    Object.entries(colors).forEach(([key, value]) => {\n      root.style.setProperty(`--color-${this.kebabCase(key)}`, value)\n    })\n\n    // Apply layout variables\n    root.style.setProperty('--sidebar-width', layout.sidebar.width)\n    root.style.setProperty('--header-height', layout.header.height)\n    root.style.setProperty('--content-max-width', layout.content.maxWidth)\n    root.style.setProperty('--content-padding', layout.content.padding)\n\n    // Apply typography variables\n    Object.entries(typography.fontSize).forEach(([key, value]) => {\n      root.style.setProperty(`--font-size-${key}`, value)\n    })\n\n    Object.entries(typography.fontWeight).forEach(([key, value]) => {\n      root.style.setProperty(`--font-weight-${key}`, value.toString())\n    })\n  }\n\n  /**\n   * Apply logo changes\n   */\n  private applyLogos(): void {\n    if (!this.config?.logos) return\n\n    // Update favicon\n    this.updateFavicon(this.config.logos.favicon)\n\n    // Update page logos\n    const logoElements = document.querySelectorAll('[data-logo]')\n    logoElements.forEach((element) => {\n      const logoType = element.getAttribute('data-logo') as keyof typeof this.config.logos\n      if (logoType && this.config?.logos[logoType]) {\n        (element as HTMLImageElement).src = this.config.logos[logoType]\n      }\n    })\n  }\n\n  /**\n   * Update favicon\n   */\n  private updateFavicon(iconUrl: string): void {\n    let favicon = document.querySelector('link[rel=\"icon\"]') as HTMLLinkElement\n    if (!favicon) {\n      favicon = document.createElement('link')\n      favicon.rel = 'icon'\n      document.head.appendChild(favicon)\n    }\n    favicon.href = iconUrl\n  }\n\n  /**\n   * Apply typography settings\n   */\n  private applyTypography(): void {\n    if (!this.config?.typography) return\n\n    const root = document.documentElement\n    const { fontFamily } = this.config.typography\n\n    // Detect document language and apply appropriate font\n    const isArabic = document.documentElement.lang === 'ar' || \n                    document.documentElement.dir === 'rtl'\n    \n    const primaryFont = isArabic ? fontFamily.arabic : fontFamily.latin\n    root.style.setProperty('--font-family-primary', primaryFont.join(', '))\n  }\n\n  /**\n   * Set up dynamic branding updates\n   */\n  private setupDynamicUpdates(): void {\n    // Listen for branding update events\n    if (typeof window !== 'undefined') {\n      window.addEventListener('branding-update', this.handleBrandingUpdate.bind(this))\n    }\n\n    // Set up periodic refresh (every 5 minutes)\n    setInterval(() => {\n      this.refreshBranding()\n    }, 5 * 60 * 1000)\n  }\n\n  /**\n   * Handle branding update events\n   */\n  private handleBrandingUpdate(event: CustomEvent): void {\n    if (event.detail?.workshopId === this.workshopId) {\n      this.config = event.detail.config\n      this.applyBranding()\n    }\n  }\n\n  /**\n   * Refresh branding configuration\n   */\n  async refreshBranding(): Promise<void> {\n    if (!this.initialized) return\n\n    try {\n      await this.loadConfiguration()\n      this.applyBranding()\n    } catch (error) {\n      console.warn('Failed to refresh branding:', error)\n    }\n  }\n\n  /**\n   * Update branding configuration\n   */\n  async updateConfig(config: Partial<BrandingConfig>): Promise<void> {\n    if (!this.config) return\n\n    this.config = { ...this.config, ...config }\n    this.applyBranding()\n\n    // Save to server\n    try {\n      await this.saveBrandingConfig(this.config)\n    } catch (error) {\n      console.error('Failed to save branding config:', error)\n    }\n  }\n\n  /**\n   * Save branding configuration to server\n   */\n  private async saveBrandingConfig(config: BrandingConfig): Promise<void> {\n    if (typeof window !== 'undefined' && window.frappe?.call) {\n      await window.frappe.call({\n        method: 'universal_workshop.api.save_branding_config',\n        args: { \n          workshop_id: this.workshopId,\n          config: config\n        }\n      })\n    }\n  }\n\n  /**\n   * Get current branding configuration\n   */\n  getCurrentConfig(): BrandingConfig | null {\n    return this.config\n  }\n\n  /**\n   * Subscribe to branding changes\n   */\n  subscribe(observer: BrandingObserver): void {\n    this.observers.add(observer)\n  }\n\n  /**\n   * Unsubscribe from branding changes\n   */\n  unsubscribe(observer: BrandingObserver): void {\n    this.observers.delete(observer)\n  }\n\n  /**\n   * Notify all observers of branding changes\n   */\n  private notifyObservers(): void {\n    this.observers.forEach(observer => {\n      try {\n        observer(this.config)\n      } catch (error) {\n        console.error('Error notifying branding observer:', error)\n      }\n    })\n  }\n\n  /**\n   * Detect workshop ID from various sources\n   */\n  private detectWorkshopId(): string | null {\n    // Try to get from Frappe boot\n    if (typeof window !== 'undefined' && window.frappe?.boot) {\n      return window.frappe.boot.user?.name || null\n    }\n\n    // Try to get from URL\n    const urlParams = new URLSearchParams(window.location.search)\n    const workshopParam = urlParams.get('workshop')\n    if (workshopParam) return workshopParam\n\n    // Try to get from localStorage\n    return localStorage.getItem('workshopId')\n  }\n\n  /**\n   * Convert camelCase to kebab-case\n   */\n  private kebabCase(str: string): string {\n    return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase()\n  }\n}\n\n// Observer interface for branding changes\nexport interface BrandingObserver {\n  (config: BrandingConfig | null): void\n}\n\n// Export singleton instance\nexport const brandingSystem = new BrandingSystem()\nexport default BrandingSystem"],"names":["BrandingSystem","workshopId","__publicField","error","response","root","colors","layout","typography","key","value","element","logoType","iconUrl","favicon","fontFamily","primaryFont","event","config","observer","workshopParam","str"],"mappings":"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"}